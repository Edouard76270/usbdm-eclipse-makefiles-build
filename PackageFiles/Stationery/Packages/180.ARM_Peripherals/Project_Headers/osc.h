/*
 * osc.h
 *
 *  Created on: 25/10/2013
 *      Author: podonoghue
 */

#ifndef OSC_H_
#define OSC_H_
 /*
 * *****************************
 * *** DO NOT EDIT THIS FILE ***
 * *****************************
 *
 * This file is generated automatically.
 * Any manual changes will be lost.
 */
#include "pin_mapping.h"

namespace USBDM {

template <class Info>
class Osc {

public:
   static uint32_t osc32kclk;
   static uint32_t oscclk;
   static uint32_t oscclkUndivided;

protected:
   static constexpr volatile OSC_Type *osc = reinterpret_cast<volatile OSC_Type *>(Info::basePtr);

public:
   /**
    * Initialise OSC to default settings\n
    * Configures all OSC pins
    */
   static void initialise() {

      // Configure pins
      Info::initPCRs();

      // Configure Osc
      osc->CR  = Info::cr;

      // Assume these clocks are always available as
      // Osc may also be enabled by MCG as erc_clock
      oscclkUndivided = Info::oscclk_clock;
      osc32kclk       = Info::osc32kclk_clock;

      if (Osc0Info::cr&&OSC_CR_ERCLKEN_MASK) {
   #ifdef OSC_DIV_ERPS
         osc->DIV  = Info::div;
         oscclk    = Info::oscclk_clock/(1<<((Info::cr&OSC_DIV_ERPS_MASK)>>OSC_DIV_ERPS_SHIFT));
   #else
         oscclk     = Info::oscclk_clock;
   #endif
      }
      else {
         oscclk     = 0;
      }
   }
};

template <class Info> uint32_t Osc<Info>::osc32kclk = 0;
template <class Info> uint32_t Osc<Info>::oscclk = 0;
template <class Info> uint32_t Osc<Info>::oscclkUndivided = 0;

#ifdef USBDM_OSC0_IS_DEFINED
class Osc0 : public Osc<Osc0Info> {};
#endif

#ifdef USBDM_OSC1_IS_DEFINED
class Osc1 : public Osc<Osc1Info> {};
#endif

} // End namespace USBDM

#endif /* OSC_H_ */

/*
 * pdb.h
 *
 *  Created on: 25/10/2013
 *      Author: podonoghue
 */

#ifndef PDB_H_
#define PDB_H_
 /*
 * *****************************
 * *** DO NOT EDIT THIS FILE ***
 * *****************************
 *
 * This file is generated automatically.
 * Any manual changes will be lost.
 */
#include "hardware.h"

namespace USBDM {

/**
 * Type definition for PDB interrupt call back
 *
 *  @param timeSinceEpoch - Time since the epoch in seconds
 */
typedef void (*PDBCallbackFunction)();

template <class Info>
class PdbBase_T {

protected:
   static constexpr volatile PDB_Type *pdb      = Info::pdb;
   static constexpr volatile uint32_t *clockReg = Info::clockReg;

public:
   /**
    * Initialise PDB to default settings\n
    * Configures all PDB pins
    */
   static void initialise() {
      clockReg |= Info::clockMask;
      __DMB();

      Info::initPCRs();
   }
};

/**
 * Template class to provide PDB callback
 */
template<class Info>
class PdbIrq_T : public PdbBase_T<Info> {

protected:
   /** Callback function for ISR */
   static PDBCallbackFunction callback;

public:
   /**
    * IRQ handler
    */
   static void irqHandler(void) {
      if (callback != 0) {
         callback();
      }
      PdbBase_T<Info>::pdb->SC  &= ~PDB_SC_PDBIE_MASK;
   }

   /**
    * Set Callback function
    *
    *   @param theCallback - Callback function to be executed on PDB alarm interrupt
    *   @param time        - Time to set alarm for (time since the epoch in seconds)
    */
   static void setCallback(PDBCallbackFunction theCallback, uint32_t time) {
      callback = theCallback;
      if (callback != NULL) {
         // Set alarm time
         PdbBase_T<Info>::pdb->TAR   = time;
         // Enable interrupts from PDB alarm
         PdbBase_T<Info>::pdb->SC   |= PDB_SC_PDBIE_MASK;
         NVIC_EnableIRQ(Info::irqNums[0]);
      }
      else {
         // Disable interrupts from PDB alarm
         PdbBase_T<Info>::pdb->SC   &= ~PDB_SC_PDBIE_MASK;
         NVIC_DisableIRQ(Info::irqNums[0]);
      }
   }
};

template<class Info> PDBCallbackFunction PdbIrq_T<Info>::callback = 0;

#ifdef USBDM_PDB_IS_DEFINED
/**
 * Class representing PDB
 */
using Pdb = PdbIrq_T<PdbInfo>;

#endif

} // End namespace USBDM

#endif /* PDB_H_ */

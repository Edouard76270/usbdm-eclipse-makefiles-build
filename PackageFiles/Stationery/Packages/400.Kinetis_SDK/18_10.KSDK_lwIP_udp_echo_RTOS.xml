<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE root SYSTEM "../package.dtd">

<root version="1.0" >
   <!-- Freescale group-ksdk-demoes -->
   <projectActionList id="KSDK-udp-echo-rtos" root="">
      <applyWhen>
         <and>
            <or>
    <hardwareMatches>^frdmk64f</hardwareMatches>
    <hardwareMatches>^twrk60d100m</hardwareMatches>
    <hardwareMatches>^twrk64f120m</hardwareMatches>
            </or>
            <variableRef idRef="outputType" condition="matches" value=".*ProjectType\.exe$" />
         </and>
      </applyWhen>
      <variable id="projectOptionValue.KSDK-udp-echo-rtos" 
            name="UDP Echo Demo on lwIP TCP/IP Stack (RTOS)" 
            description=
"This is a UDP echo demo on the lwIP TCP/IP stack with bare metal SDK which uses the UDP\n 
protocol and acts as an echo server. The application on board sends back the UDP packets from\n
the PC, which can be used to test whether the UDP connection is available"
            radioGroup="group-ksdk-demo" >
         <enableWhen>
            <and>
               <requirement idRef="projectOptionValue.Kinetis-SDK-enable" />
               <or>
                  <requirement idRef="projectOptionValue.Kinetis-SDK-os-mqx" />
                  <requirement idRef="projectOptionValue.Kinetis-SDK-os-free-rtos" />
                  <requirement idRef="projectOptionValue.Kinetis-SDK-os-ucosii" />
                  <requirement idRef="projectOptionValue.Kinetis-SDK-os-ucosiii" />
               </or>
            </and>
         </enableWhen>
      </variable>
   	<projectActionList>
         <!--  Common files -->
   		<applyWhen>
            <and>
               <variableRef idRef="projectOptionValue.Kinetis-SDK-enable" />
               <variableRef idRef="projectOptionValue.KSDK-udp-echo-rtos" />
            </and>
   		</applyWhen>
         <deleteResource target="Sources/main.c" />
         <copy source="usbdm_kds_path/tcpip/lwip"                                          target="lwip"       type="link"   sourcePathType="absolute" />
         <copy source="usbdm_kds_path/boards/common/phyksz8081/fsl_phy_driver.c"           target="Sources/fsl_phy_driver.c" sourcePathType="absolute" />
         <copy source="usbdm_kds_path/demos/lwip_udpecho_demo/udpecho_rtos/src/udpecho.c"  target="Sources/udpecho.c"           sourcePathType="absolute" />
         <!-- C Include paths -->
         <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.include.paths">
            <value>&quot;${usbdm_kds_path}/tcpip/lwip&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/port&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/port/arch&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/ipv4&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/ipv4/lwip&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/ipv6&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/ipv6/lwip&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/lwip&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/netif&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/posix&quot;</value>
            <value>&quot;${usbdm_kds_path}/boards/common/phyksz8081&quot;</value>
         </projectOption>
         <!-- C++ Include paths -->
         <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.include.paths">
            <value>&quot;${usbdm_kds_path}/tcpip/lwip&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/port&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/port/arch&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/ipv4&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/ipv4/lwip&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/ipv6&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/ipv6/lwip&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/lwip&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/netif&quot;</value>
            <value>&quot;${usbdm_kds_path}/tcpip/lwip/src/include/posix&quot;</value>
            <value>&quot;${usbdm_kds_path}/boards/common/phyksz8081&quot;</value>
         </projectOption>
         <!-- C Link options -->
         <projectOption id="gnu.c.link.option.other" replace="true">
            <value>&quot;--defsym=__stack_size__=0x2000&quot;</value>
            <value>&quot;--defsym=__heap_size__=0x8000&quot;</value>
            <value>&quot;--defsym=__ram_vector_table__=1&quot;</value>
         </projectOption>
         <!-- C++ Link options -->
         <projectOption id="gnu.cpp.link.option.other" replace="true">
            <value>&quot;--defsym=__stack_size__=0x2000&quot;</value>
            <value>&quot;--defsym=__heap_size__=0xA000&quot;</value>
         </projectOption>
         <excludeSourceFolder target="lwip/src/core/ipv6" />
   	</projectActionList>
   </projectActionList>
</root>
